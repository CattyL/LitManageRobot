<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Native.Csharp</name>
    </assembly>
    <members>
        <member name="T:Native.Csharp.App.Common">
            <summary>
            用于存放 App 数据的公共类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.AppName">
            <summary>
            获取 App 在酷Q中显示的名称 (此属性 set 并不能做出实质性的修改)
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.AppVersion">
            <summary>
            获取 App 在酷Q中的版本号 (此属性 set 并不能做出实质性的修改)
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.AppDirectory">
            <summary>
            获取或设置 App 在运行期间所使用的数据路径
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.IsRunning">
            <summary>
            获取或设置当前 App 是否处于运行状态
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.UnityContainer">
            <summary>
            获取或设置当前 App 使用的依赖注入容器实例
            </summary>
        </member>
        <member name="P:Native.Csharp.App.Common.CqApi">
            <summary>
            获取或设置当前 App 使用的 酷Q Api 接口实例
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.LibExport.#cctor">
            <summary>
            静态构造函数, 注册依赖注入回调
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.LibExport.AppInfo">
            <summary>
            返回 AppID 与 ApiVer, 本方法在模板运行后会根据项目名称自动填写 AppID 与 ApiVer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Native.Csharp.App.Core.LibExport.Initialize(System.Int32)">
            <summary>
            接收插件 AutoCode, 注册异常
            </summary>
            <param name="authCode"></param>
            <returns></returns>
        </member>
        <member name="M:Native.Csharp.App.Core.LibExport.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            全局异常捕获, 用于捕获开发者未处理的异常, 此异常将回弹至酷Q进行处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Native.Csharp.App.Core.LibExport.ResolveAppbackcall">
            <summary>
            获取所有的注入项, 分发到对应的事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.MenuExport.#cctor">
            <summary>
            静态构造函数, 注册依赖注入回调
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.MenuExport.ResolveAppbackcall">
            <summary>
            获取所有的注入项, 分发到对应的事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.StatusExport.#cctor">
            <summary>
            静态构造函数, 注册依赖注入回调
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Core.StatusExport.ResolveAppbackcall">
            <summary>
            获取所有的注入项, 分发到对应的事件
            </summary>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs">
            <summary>
            表示添加好友请求事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.Message">
            <summary>
            获取当前消息的消息内容
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.ResponseFlag">
            <summary>
            反馈标识, 用于对该请求做响应时的标识参数
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.String,System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">触发时间</param>
            <param name="fromQQ">来源QQ</param>
            <param name="message">附加消息</param>
            <param name="flag">反馈标识</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs">
            <summary>
            表示添加群请求事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.Message">
            <summary>
            获取当前消息的消息内容
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.ResponseFlag">
            <summary>
            反馈标识, 用于对该请求做响应时的标识参数
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">触发时间</param>
            <param name="fromGroup">来源群组</param>
            <param name="fromQQ">来源QQ</param>
            <param name="message">附加消息</param>
            <param name="flag">反馈标识</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqAppDisableEventArgs">
            <summary>
            表示应用停用事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAppDisableEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAppDisableEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqAppDisableEventArgs.#ctor(System.Int32)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqAppDisableEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqAppEnableEventArgs">
            <summary>
            表示应用启动事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAppEnableEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqAppEnableEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqAppEnableEventArgs.#ctor(System.Int32)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqAppEnableEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqCallMenuEventArgs">
            <summary>
            表示菜单被调用的参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqCallMenuEventArgs.Menu">
            <summary>
            获取调用菜单的菜单名称
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqCallMenuEventArgs.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqCallMenuEventArgs"/> 类的一个新实例
            </summary>
            <param name="menu">菜单名称</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqEventArgsBase">
            <summary>
            表示酷Q事件参数基类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqEventArgsBase.Id">
            <summary>
            当在派生类中重写时, 表示当前事件的ID
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqEventArgsBase.Type">
            <summary>
            当在派生类中重写时, 表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqEventArgsBase.Name">
            <summary>
            当在派生类中重写时, 表示当前事件的名称
            </summary>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqExitEventArgs">
            <summary>
            表示酷Q退出事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqExitEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqExitEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqExitEventArgs.#ctor(System.Int32)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqExitEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs">
            <summary>
            表示讨论组消息事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.MsgId">
            <summary>
            获取或设置一个值, 表示当前事件所产生消息的唯一编号, 可用于撤回消息
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.FromDiscuss">
            <summary>
            获取当前消息的来源讨论组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.Message">
            <summary>
            获取当前消息的消息内容
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs.#ctor(System.Int32,System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="msgId">消息ID</param>
            <param name="fromDiscuss">来源讨论组</param>
            <param name="fromQQ">来源QQ</param>
            <param name="msg">消息内容</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqStatusEventArgs">
            <summary>
            表示酷Q悬浮窗回调事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStatusEventArgs.Id">
            <summary>
            悬浮窗ID
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStatusEventArgs.Name">
            <summary>
            悬浮窗名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStatusEventArgs.Title">
            <summary>
            悬浮窗标题
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStatusEventArgs.Period">
            <summary>
            更新间隔
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStatusEventArgs.FloatWindowData">
            <summary>
            获取或设置当前悬浮窗显示的数据
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqStatusEventArgs.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqStatusEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">ID</param>
            <param name="name">名称</param>
            <param name="title">标题</param>
            <param name="period">更新时间</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs">
            <summary>
            表示好友已添加事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs.#ctor(System.Int32,System.DateTime,System.Int64)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">触发时间</param>
            <param name="fromQQ">来源QQ</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs">
            <summary>
            表示群组文件上传事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.SendTime">
            <summary>
            获取当前文件上传时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.File">
            <summary>
            获取当前上传的文件详细信息
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.Int64,Native.Csharp.Sdk.Cqp.Model.GroupFile)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs"/> 类的一个新实例
            </summary>
            <param name="sendTime">发送时间</param>
            <param name="fromGroup">来源群</param>
            <param name="fromQQ">来源QQ</param>
            <param name="file">文件信息</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs">
            <summary>
            表示群管理变动事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.BeingOperateQQ">
            <summary>
            获取当前事件触发时的目标QQ
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.Int64)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">触发时间</param>
            <param name="fromGroup">来源群</param>
            <param name="targetQQ">目标QQ</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs">
            <summary>
            表示群成员减少事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.BeingOperateQQ">
            <summary>
            获取当前事件触发时的目标QQ
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.Int64,System.Int64)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">发送时间</param>
            <param name="fromGroup">来源群</param>
            <param name="fromQQ">操作者QQ</param>
            <param name="operateQQ">被操作QQ</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs">
            <summary>
            表示群成员增加事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.SendTime">
            <summary>
            获取当前事件触发时间
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.BeingOperateQQ">
            <summary>
            获取当前事件触发时的目标QQ
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs.#ctor(System.Int32,System.DateTime,System.Int64,System.Int64,System.Int64)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="sendTime">发送时间</param>
            <param name="fromGroup">来源群</param>
            <param name="fromQQ">操作者QQ</param>
            <param name="operateQQ">被操作QQ</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs">
            <summary>
            表示群组消息事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.MsgId">
            <summary>
            获取或设置一个值, 表示当前事件所产生消息的唯一编号, 可用于撤回消息
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.FromGroup">
            <summary>
            获取当前消息的来源群组号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.IsAnonymous">
            <summary>
            获取一个值, 该值指示本条消息是否为匿名消息
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.FromAnonymous">
            <summary>
            获取若当前消息为匿名消息时的匿名对象参数
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.Message">
            <summary>
            获取当前消息的消息内容
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs.#ctor(System.Int32,System.Int32,System.Int64,System.Int64,Native.Csharp.Sdk.Cqp.Model.GroupAnonymous,System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqGroupMessageEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="msgId">消息ID</param>
            <param name="fromGroup">来源群组</param>
            <param name="fromQQ">来源QQ</param>
            <param name="anonymous">来源匿名</param>
            <param name="msg">消息</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs">
            <summary>
            表示私聊消息事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.MsgId">
            <summary>
            获取或设置一个值, 表示当前事件所产生消息的唯一编号, 可用于撤回消息
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.FromQQ">
            <summary>
            获取当前消息的来源QQ号
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.Message">
            <summary>
            获取当前消息的消息内容
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.Handler">
            <summary>
            获取或设置一个值, 指示当前是否处理过此事件. 若此值为 True 将停止处理后续事件
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs.#ctor(System.Int32,System.Int32,System.Int64,System.String)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
            <param name="msgId">消息ID</param>
            <param name="fromQQ">来源QQ</param>
            <param name="msg">消息内容</param>
        </member>
        <member name="T:Native.Csharp.App.EventArgs.CqStartupEventArgs">
            <summary>
            表示酷Q启动事件参数的类
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStartupEventArgs.Type">
            <summary>
            获取一个值, 该值表示当前事件的类型
            </summary>
        </member>
        <member name="P:Native.Csharp.App.EventArgs.CqStartupEventArgs.Name">
            <summary>
            获取一个值, 该值表示当前事件的名称
            </summary>
        </member>
        <member name="M:Native.Csharp.App.EventArgs.CqStartupEventArgs.#ctor(System.Int32)">
            <summary>
            初始化 <see cref="T:Native.Csharp.App.EventArgs.CqStartupEventArgs"/> 类的一个新实例
            </summary>
            <param name="id">事件ID</param>
        </member>
        <member name="T:Native.Csharp.App.Event.Event_CqAppDisable">
            <summary>
            Type=1004 应用被禁用, 事件实现
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_CqAppDisable.CqAppDisable(System.Object,Native.Csharp.App.EventArgs.CqAppDisableEventArgs)">
            <summary>
            处理 酷Q 的插件关闭事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Event.Event_CqAppEnable">
            <summary>
            Type=1003 应用被启用, 事件实现
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_CqAppEnable.CqAppEnable(System.Object,Native.Csharp.App.EventArgs.CqAppEnableEventArgs)">
            <summary>
            处理 酷Q 的插件启动事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_AppMain.Registbackcall(Unity.IUnityContainer)">
            <summary>
            回调注册
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_AppMain.Resolvebackcall(Unity.IUnityContainer)">
            <summary>
            回调分发
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:Native.Csharp.App.Event.Event_CqExit">
            <summary>
            Type=1002 酷Q退出, 事件实现
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_CqExit.CqExit(System.Object,Native.Csharp.App.EventArgs.CqExitEventArgs)">
            <summary>
            处理 酷Q 的退出事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Event.Event_CqStartup">
            <summary>
            Type=1001 酷Q启动, 事件实现
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Event.Event_CqStartup.CqStartup(System.Object,Native.Csharp.App.EventArgs.CqStartupEventArgs)">
            <summary>
            处理 酷Q 的启动事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICqAppDisable">
            <summary>
            Type=1004 应用被禁用, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICqAppDisable.CqAppDisable(System.Object,Native.Csharp.App.EventArgs.CqAppDisableEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的插件关闭事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICqAppEnable">
            <summary>
            Type=1003 应用被启用, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICqAppEnable.CqAppEnable(System.Object,Native.Csharp.App.EventArgs.CqAppEnableEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的插件启动事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICallMenu">
            <summary>
            菜单被调用, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICallMenu.CallMenu(System.Object,Native.Csharp.App.EventArgs.CqCallMenuEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的菜单调用事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICqExit">
            <summary>
            Type=1002 酷Q退出, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICqExit.CqExit(System.Object,Native.Csharp.App.EventArgs.CqExitEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的退出事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICqStartup">
            <summary>
            Type=1001 酷Q启动, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICqStartup.CqStartup(System.Object,Native.Csharp.App.EventArgs.CqStartupEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的启动事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.ICqStatus">
            <summary>
            酷Q状态获取, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.ICqStatus.CqStatus(System.Object,Native.Csharp.App.EventArgs.CqStatusEventArgs)">
            <summary>
            当在派生类中重写时, 处理 酷Q 的获取状态事件回调
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveDiscussMessage">
            <summary>
            Type=4 讨论组消息, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveDiscussMessage.ReceiveDiscussMessage(System.Object,Native.Csharp.App.EventArgs.CqDiscussMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的讨论组消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveDiscussPrivateMessage">
            <summary>
            Type=21 讨论组私聊消息, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveDiscussPrivateMessage.ReceiveDiscussPrivateMessage(System.Object,Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的讨论组私聊消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveFriendAddRequest">
            <summary>
            Type=301 收到好友添加请求, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveFriendAddRequest.ReceiveFriendAddRequest(System.Object,Native.Csharp.App.EventArgs.CqAddFriendRequestEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的好友添加请求
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveFriendIncrease">
            <summary>
            Type=201 好友已添加, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveFriendIncrease.ReceiveFriendIncrease(System.Object,Native.Csharp.App.EventArgs.CqFriendIncreaseEventArgs)">
            <summary>
            当在派生类中重写时, 处理好友已经添加事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveFriendMessage">
            <summary>
            Type=21 好友消息, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveFriendMessage.ReceiveFriendMessage(System.Object,Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的好友消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveAddGroupRequest">
            <summary>
            Type=302 群事件 - 群请求 - 申请入群, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveAddGroupRequest.ReceiveAddGroupRequest(System.Object,Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群请求 (申请入群) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveAddGroupBeInvitee">
            <summary>
            Type=302 群事件 - 群请求 - 被邀入群 (机器人被邀), 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveAddGroupBeInvitee.ReceiveAddGroupBeInvitee(System.Object,Native.Csharp.App.EventArgs.CqAddGroupRequestEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群请求 (被邀入群) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupFileUpload">
            <summary>
            Type=11 群文件上传事件, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupFileUpload.ReceiveGroupFileUpload(System.Object,Native.Csharp.App.EventArgs.CqGroupFileUploadEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群文件上传结果
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupManageDecrease">
            <summary>
            Type=101 群事件 - 管理员减少, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupManageDecrease.ReceiveGroupManageDecrease(System.Object,Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群管理员减少事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupManageIncrease">
            <summary>
            Type=101 群事件 - 管理员增加, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupManageIncrease.ReceiveGroupManageIncrease(System.Object,Native.Csharp.App.EventArgs.CqGroupManageChangeEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群管理员增加事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupMemberBeInvitee">
            <summary>
            Type=103 群事件 - 群成员增加 - 被邀入群, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupMemberBeInvitee.ReceiveGroupMemberBeInvitee(System.Object,Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群成员增加 (被邀入群) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupMemberPass">
            <summary>
            Type=103 群事件 - 群成员增加 - 主动入群, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupMemberPass.ReceiveGroupMemberPass(System.Object,Native.Csharp.App.EventArgs.CqGroupMemberIncreaseEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群成员增加 (主动入群) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupMemberLeave">
            <summary>
            Type=102 群事件 - 群成员减少 - 成员离开, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupMemberLeave.ReceiveGroupMemberLeave(System.Object,Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群成员减少 (成员离开) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupMemberRemove">
            <summary>
            Type=102 群事件 - 群成员减少 - 成员移除, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupMemberRemove.ReceiveGroupMemberRemove(System.Object,Native.Csharp.App.EventArgs.CqGroupMemberDecreaseEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群成员减少 (成员移除) 事件
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupMessage">
            <summary>
            Type=2 群消息, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupMessage.ReceiveGroupMessage(System.Object,Native.Csharp.App.EventArgs.CqGroupMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveGroupPrivateMessage">
            <summary>
            Type=21 群私聊, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveGroupPrivateMessage.ReceiveGroupPrivateMessage(System.Object,Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的群私聊消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
        <member name="T:Native.Csharp.App.Interface.IReceiveOnlineStatusMessage">
            <summary>
            Type=21 在线状态消息, 事件接口
            </summary>
        </member>
        <member name="M:Native.Csharp.App.Interface.IReceiveOnlineStatusMessage.ReceiveOnlineStatusMessage(System.Object,Native.Csharp.App.EventArgs.CqPrivateMessageEventArgs)">
            <summary>
            当在派生类中重写时, 处理收到的在线状态消息
            </summary>
            <param name="sender">事件的触发对象</param>
            <param name="e">事件的附加参数</param>
        </member>
    </members>
</doc>
